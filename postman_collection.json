{
	"info": {
		"_postman_id": "YOUR_COLLECTION_ID",
		"name": "Financial Data Analyzer API - SEB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_collection_link": ""
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Obtain JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    let json = pm.response.json();",
									"    pm.environment.set(\"access_token\", json.access);",
									"    pm.environment.set(\"refresh_token\", json.refresh);",
									"    console.log(\"Access Token: \" + json.access);",
									"    console.log(\"Refresh Token: \" + json.refresh);",
									"}",
									"else {",
									"    console.error(\"Token obtain failed: \" + pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/token/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"token",
								""
							]
						},
						"description": "Login with username and password to get access and refresh tokens."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/token/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"token",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0Nzg5MzY5NCwiaWF0IjoxNzQ3ODA3Mjk0LCJqdGkiOiJmYzMwMGRmZmYyZjc0ZDVjYjIwZmJjNmNjOTAxM2Y5NiIsInVzZXJfaWQiOjJ9.4eyJtDxspZcve9BzgVzgOjT1lEyetJC0fyC7fwUr_00\",\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ3ODEwODk0LCJpYXQiOjE3NDc4MDcyOTQsImp0aSI6IjllMjk5MDI4ZTNmNjQxMjA5YjU1NTY1ZTZlMDhlMjk3IiwidXNlcl9pZCI6Mn0.IoZI0OjNDirfQrhsyYFUFzHuacbEtM7BYWTbqwP-K4c\"\n}"
						}
					]
				},
				{
					"name": "Refresh JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    let json = pm.response.json();",
									"    pm.environment.set(\"access_token\", json.access);",
									"     console.log(\"New Access Token: \" + json.access);",
									"}",
									"else {",
									"    console.error(\"Token refresh failed: \" + pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/token/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"token",
								"refresh",
								""
							]
						},
						"description": "Use a refresh token to get a new access token."
					},
					"response": []
				},
				{
					"name": "Verify JWT Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{access_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/token/verify/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"token",
								"verify",
								""
							]
						},
						"description": "Verify if an access token is valid."
					},
					"response": []
				}
			]
		},
		{
			"name": "Stocks API",
			"item": [
				{
					"name": "List Significant Events",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stocks/significant-events/?symbol__ticker=GOOGL&event_type=PRICE_INCREASE",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stocks",
								"significant-events",
								""
							],
							"query": [
								{
									"key": "symbol__ticker",
									"value": "GOOGL",
									"description": "Filter by stock ticker symbol"
								},
								{
									"key": "event_type",
									"value": "PRICE_INCREASE",
									"description": "Filter by event type (e.g., PRICE_INCREASE, PRICE_DECREASE, VOLUME_SPIKE, EARNINGS_REPORT)"
								},
								{
									"key": "timestamp__gte",
									"value": "2024-01-01T00:00:00Z",
									"disabled": true,
									"description": "Filter by timestamp greater than or equal to (ISO 8601 format)"
								},
								{
									"key": "timestamp__lte",
									"value": "2024-12-31T23:59:59Z",
									"disabled": true,
									"description": "Filter by timestamp less than or equal to (ISO 8601 format)"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true,
									"description": "For pagination, request the specified page number"
								},
								{
									"key": "page_size",
									"value": "10",
									"disabled": true,
									"description": "Number of results per page"
								},
								{
									"key": "ordering",
									"value": "-timestamp",
									"disabled": true,
									"description": "Order results by field (prefix with - for descending)"
								}
							]
						},
						"description": "Get a list of significant stock events. Requires Bearer token. Test with pagination (?page=<number>) and filtering (?symbol__ticker=...&event_type=...&timestamp__gte=...)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/stocks/significant-events/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"stocks",
										"significant-events",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"count\": 8,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 8,\n            \"symbol\": {\n                \"ticker\": \"AMZN\",\n                \"name\": \"Amazon.com, Inc.\"\n            },\n            \"event_type\": \"EARNINGS_REPORT\",\n            \"timestamp\": \"2025-05-21T06:06:08.828582Z\",\n            \"details\": {\n                \"description\": \"EARNINGS_REPORT detected for AMZN\",\n                \"magnitude\": 5.86,\n                \"previous_value\": 3564.46,\n                \"current_value\": 3486.88\n            }\n        },\n        {\n            \"id\": 7,\n            \"symbol\": {\n                \"ticker\": \"AMZN\",\n                \"name\": \"Amazon.com, Inc.\"\n            },\n            \"event_type\": \"PRICE_DECREASE\",\n            \"timestamp\": \"2025-05-21T06:06:08.827832Z\",\n            \"details\": {\n                \"description\": \"PRICE_DECREASE detected for AMZN\",\n                \"magnitude\": 4.89,\n                \"previous_value\": 3464.84,\n                \"current_value\": 3486.8\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Stock Symbols",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stocks/symbols/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stocks",
								"symbols",
								""
							],
							"query": [
								{
									"key": "search",
									"value": "GOO",
									"disabled": true,
									"description": "Search by ticker or name"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true,
									"description": "For pagination, request the specified page number"
								},
								{
									"key": "page_size",
									"value": "10",
									"disabled": true,
									"description": "Number of results per page"
								}
							]
						},
						"description": "Get a list of available stock symbols. Requires Bearer token. Supports search and pagination."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/stocks/symbols/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"stocks",
										"symbols",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"count\": 3,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"ticker\": \"AMZN\",\n            \"name\": \"Amazon.com, Inc.\"\n        },\n        {\n            \"ticker\": \"GOOGL\",\n            \"name\": \"Alphabet Inc.\"\n        },\n        {\n            \"ticker\": \"MSFT\",\n            \"name\": \"Microsoft Corporation\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Price History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stocks/price-history/?symbol__ticker=GOOGL",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stocks",
								"price-history",
								""
							],
							"query": [
								{
									"key": "symbol__ticker",
									"value": "GOOGL",
									"description": "Stock ticker symbol (required)"
								},
								{
									"key": "timestamp__gte",
									"value": "2024-01-01T00:00:00Z",
									"disabled": true,
									"description": "Filter by timestamp greater than or equal to (ISO 8601 format)"
								},
								{
									"key": "timestamp__lte",
									"value": "2024-12-31T23:59:59Z",
									"disabled": true,
									"description": "Filter by timestamp less than or equal to (ISO 8601 format)"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true,
									"description": "For pagination, request the specified page number"
								},
								{
									"key": "page_size",
									"value": "10",
									"disabled": true,
									"description": "Number of results per page"
								},
								{
									"key": "ordering",
									"value": "timestamp",
									"disabled": true,
									"description": "Order results by timestamp (prefix with - for descending)"
								}
							]
						},
						"description": "Get price history for a specific stock symbol. Requires Bearer token. Symbol ticker is required."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/stocks/price-history/?symbol__ticker=GOOGL",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"stocks",
										"price-history",
										""
									],
									"query": [
										{
											"key": "symbol__ticker",
											"value": "GOOGL"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"count\": 10,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": 1,\n            \"symbol\": {\n                \"ticker\": \"GOOGL\",\n                \"name\": \"Alphabet Inc.\"\n            },\n            \"timestamp\": \"2025-05-11T06:05:39.115334Z\",\n            \"price\": \"2798.92\",\n            \"volume\": null\n        },\n        {\n            \"id\": 2,\n            \"symbol\": {\n                \"ticker\": \"GOOGL\",\n                \"name\": \"Alphabet Inc.\"\n            },\n            \"timestamp\": \"2025-05-12T06:05:39.118203Z\",\n            \"price\": \"2834.07\",\n            \"volume\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Event Summary",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stocks/event-summary/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stocks",
								"event-summary",
								""
							],
							"query": [
								{
									"key": "days",
									"value": "7",
									"disabled": true,
									"description": "Number of days to include in summary (default: 7)"
								}
							]
						},
						"description": "Get a summary of significant events across all symbols. Requires Bearer token."
					},
					"response": []
				},
				{
					"name": "Fetch Latest Stock Data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"symbol\": \"GOOGL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/stocks/fetch-latest/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stocks",
								"fetch-latest",
								""
							]
						},
						"description": "Trigger a fetch of the latest stock data from Polygon.io for a specific symbol. Requires Bearer token."
					},
					"response": []
				},
				{
					"name": "Test Query Page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stocks/test-query-page/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stocks",
								"test-query-page",
								""
							]
						},
						"description": "Access the interactive test query page for exploring the API."
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin Operations",
			"item": [
				{
					"name": "Run Background Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"task_type\": \"update_all_symbols\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/admin/run-task/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"run-task",
								""
							]
						},
						"description": "Trigger a background task to update data for all symbols. Requires Bearer token and admin privileges."
					},
					"response": []
				},
				{
					"name": "Add Stock Symbol",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ticker\": \"AAPL\",\n    \"name\": \"Apple Inc.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/admin/add-symbol/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"add-symbol",
								""
							]
						},
						"description": "Add a new stock symbol to track. Requires Bearer token and admin privileges."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// This script runs after each request and updates tokens if successful login/refresh occurs",
					"",
					"// Check if the request was to the token obtain endpoint",
					"if (pm.request.url.getPath().endsWith('/api/token/')) {",
					"    if (pm.response.code === 200) {",
					"        let jsonData = pm.response.json();",
					"        // Set environment variables for access and refresh tokens",
					"        pm.environment.set(\"access_token\", jsonData.access);",
					"        pm.environment.set(\"refresh_token\", jsonData.refresh);",
					"        console.log(\"Successfully obtained tokens.\");",
					"    }",
					"    else {",
					"        console.log(\"Failed to obtain tokens.\");",
					"    }",
					"}",
					"",
					"// Check if the request was to the token refresh endpoint",
					"if (pm.request.url.getPath().endsWith('/api/token/refresh/')) {",
					"     if (pm.response.code === 200) {",
					"        let jsonData = pm.response.json();",
					"        // Update the access token environment variable",
					"        pm.environment.set(\"access_token\", jsonData.access);",
					"        console.log(\"Successfully refreshed token.\");",
					"    }",
					"    else {",
					"        console.log(\"Failed to refresh token.\");",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string",
			"description": "The base URL of your Django API"
		},
        {
            "key": "access_token",
            "value": "",
            "type": "string",
            "description": "Stores the JWT access token obtained from /api/token/"
        },
        {
            "key": "refresh_token",
            "value": "",
            "type": "string",
            "description": "Stores the JWT refresh token obtained from /api/token/"
        }
	]
}
